# port: 7890 # HTTP(S) proxy server port
# socks-port: 7891 # SOCKS5 proxy port
mixed-port: 10801 # HTTP(S) and SOCKS proxy mixed port
# redir-port: 7892 # Transparent proxy port, for Linux and MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

allow-lan: true # Allow LAN connections
bind-address: "*" # Bind IP address, only works when allow-lan is true, '*' means all addresses
authentication: # http, socks entry authentication username and password
  - "username:password"
skip-auth-prefixes: # Set the IP segment to skip verification
  - 127.0.0.1/8
  - ::1/128
lan-allowed-ips: #IP address range allowed to connect, only works when allow-lan is true, the default value is 0.0.0.0/0 and ::/0
  - 0.0.0.0/0
  - ::/0
lan-disallowed-ips: #IP address segment that is prohibited from connecting. The blacklist has a higher priority than the whitelist. The default value is empty
  - 192.168.0.3/32

#  find-process-mode has 3 values:always, strict, off
# - always, enable, force matching of all processes
# - strict, by default, mihomo decides whether to enable it
# - off, do not match the process, recommended to use this mode on routers
find-process-mode: strict

mode: rule

#Customize geodata url
geox-url:
  geoip: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.metadb"

geo-auto-update: false # Whether to automatically update geodata
geo-update-interval: 24 # Update interval, unit: hour

# Matcher implementation used by GeoSite, available implementations:
# - succinct (default, same as rule-set)
# - mph (from V2Ray, also `hybrid` in Xray)
# geosite-matcher: succinct

log-level: debug # Log level silent/error/warning/info/debug

ipv6: true # Turn on the IPv6 master switch, turn off blocking all IPv6 connections and shielding DNS request AAAA records

tls:
  certificate: string # Certificate PEM format, or certificate path
  private-key: string # The private key PEM format corresponding to the certificate, or the private key path
  custom-certifactes:
    - |
      -----BEGIN CERTIFICATE-----
      format/pem...
      -----END CERTIFICATE-----

external-controller: 0.0.0.0:9093 # RESTful API listening address
external-controller-tls: 0.0.0.0:9443 # RESTful API HTTPS listening address, you need to configure the tls part of the configuration file
# secret: "123456" # `Authorization:Bearer ${secret}`

# RESTful API CORS header configuration
external-controller-cors:
  allow-origins:
    - *
  allow-private-network: true

# RESTful API Unix socket listening address (can also be used if Windows version is greater than 17063, that is, greater than or equal to 1803/RS4)
# !!! Note: Accessing the API interface from a Unix socket will not verify the secret. If enabled, please ensure security issues yourself! ! !
# Test method: curl -v --unix-socket "mihomo.sock" http://localhost/
external-controller-unix: mihomo.sock

# RESTful API Windows namedpipe listening address
# !!! Note: Accessing the API interface from Windows namedpipe will not verify the secret. If enabled, please ensure security issues yourself!!!
external-controller-pipe: \\.\pipe\mihomo

# tcp-concurrent: true # TCP concurrently connects to all IPs, and will use the TCP with the fastest handshake

# Configure the WEB UI directory and access it using http://{{external-controller}}/ui
external-ui: /path/to/ui/folder/
external-ui-name: xd
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# Start the DOH server on the RESTful API port
# !!! This URL will not verify the secret. If enabled, please ensure security issues yourself!!!
external-doh-server: /dns-query

# interface-name: en0 # Set the egress network card

# Global TLS fingerprint, takes precedence over client-fingerprint in proxy
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

#  TCP keep alive interval
# disable-keep-alive: false #Currently forced to true on the Android side
# keep-alive-idle: 15
# keep-alive-interval: 15

# routing-mark:6666 # Configure fwmark for Linux only
experimental:
  # Disable quic-go GSO support. This may result in reduced performance on Linux.
  # This is not recommended for most users.
  # Only users encountering issues with quic-go's internal implementation should enable this,
  # and they should disable it as soon as the issue is resolved.
  # This field will be removed when quic-go fixes all their issues in GSO.
  # This equivalent to the environment variable QUIC_GO_DISABLE_GSO=1.
  #quic-go-disable-gso: true

# Similar to /etc/hosts, only supports configuration of a single IP
hosts:
# '*.mihomo.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.mihomo.dev': '::1'
# test.com: [1.1.1.1, 2.2.2.2]
# home.lan: lan # lan is a special field that will include the addresses of all local network cards
# baidu.com: google.com # Only one alias is allowed

profile: #Store select records
  store-selected: false

  # Persistent fake-ip
  store-fake-ip: true

# Tun Configuration
also:
  enable: false
  stack: system # gvisor/mixed
  dns-hijack:
    - 0.0.0.0:53 # DNS to be hijacked
  # auto-detect-interface: true # Automatically identify the egress network card
  # auto-route: true # Configure the routing table
  # mtu: 9000 # Maximum transmission unit
  # gso: false # Enable generic segmentation offload, only supported on Linux
  # gso-max-size: 65536 # Maximum size of a generic segment offload packet
  auto-redirect: false # Automatically configure iptables to redirect TCP connections. Supported on Linux only. auto-route with auto-redirect now works as expected on routers without intervention.
  # strict-route: true #Route all connections to tun to prevent leaks, but your device will not be accessible from other devices
  route-address-set: #Add the destination IP CIDR rule in the specified rule set to the firewall. Unmatched traffic will bypass the route. This is only supported on Linux and requires nftables, `auto-route` and `auto-redirect` to be enabled.
    - ruleset-1
    - ruleset-2
  route-exclude-address-set: #Add the destination IP CIDR rule in the specified rule set to the firewall, matching traffic will bypass routing, only supports Linux, and requires nftables, `auto-route` and `auto-redirect` are enabled.
    - ruleset-3
    - ruleset-4
  route-address: # Use custom routes instead of default routes when auto-route is enabled
    - 0.0.0.0/1
    - 128.0.0.0/1
    - "::/1"
    - "8000::/1"
  # inet4-route-address: # Use custom routes instead of default routes when auto-route is enabled (old style)
  #   - 0.0.0.0/1
  #   - 128.0.0.0/1
  # inet6-route-address: # Use custom routes instead of default routes when auto-route is enabled (old style)
  #   - "::/1"
  #   - "8000::/1"
  # endpoint-independent-nat: false # Enable endpoint-independent NAT
  # include-interface: # Limit the interfaces to be routed. No limit by default, conflicts with `exclude-interface`
  #   - "lan0"
  # exclude-interface: # Exclude the routing interface, conflicts with `include-interface`
  #   - "lan1"
  # include-uid: # UID rules are only supported on Linux and require auto-route
  # - 0
  # include-uid-range: # Limit the range of users being routed
  # - 1000:9999
  # exclude-uid: # exclude users from routing
  #- 1000
  # exclude-uid-range: # Exclude the user range of the route
  # - 1000:9999

  # Android user and application rules are only supported on Android
  # and auto-route is required

  # include-android-user: # Limit the Android users that are routed
  # - 0
  # - 10
  # include-package: # Limit the Android application package names that are routed
  # - com.android.chrome
  # exclude-package: # Exclude the Android application package name to be routed
  # - com.android.captiveportallogin

# Optional configuration for sniffing domain names
sniffer:
  enable: false
  ## Force sniffing of traffic identified by redir-host type
  ## For example: Tun, Redir and TProxy and DNS is redir-host all belong to
  # force-dns-mapping: false
  ## Force sniffing of all traffic that has not obtained the domain name
  # parse-pure-ip: false
  # Whether to use the sniffing result as the actual access, the default is true
  # Global configuration, with lower priority than the actual configuration of sniffer.sniff
  override-destination: false
  sniff: # TLS and QUIC sniff 443 by default if ports are not configured
    WHO:
    #  ports: [ 443 ]
    TLS:
    #  ports: [443, 8443]

    # Default sniffing 80
    HTTP: # The port to sniff
      ports: [80, 8080-8880]
      # Can override sniffer.override-destination
      override-destination: true
  force-domain:
    - +.v2ex.com
  # skip-src-address: # Skip sniffing for source ip
  #   - 192.168.0.3/32
  # skip-dst-address: # Skip sniffing for the destination ip
  #   - 192.168.0.3/32
  ## Skip the sniffing results
  # skip-domain:
  # - Paths Cloud
  # Need to sniff the protocol
  # Deprecated, this option is invalid if sniffer.sniff is configured
  sniffing:
    - tls
    - http
  # Force sniffing of this domain name

  # Only sniff ports in the whitelist, the default is 443, 80
  # Deprecated, this option is invalid if sniffer.sniff is configured
  port-whitelist:
    - "80"
    - "443"
    # - 8000-9999

tunnels: # one line config
  - tcp/udp,127.0.0.1:6553,114.114.114.114:53,proxy
  - tcp,127.0.0.1:6666,rds.mysql.com:3306,vpn
  # full yaml config
  - network: [tcp, udp]
    address: 127.0.0.1:7777
    target: target.com
    proxy: proxy

# DNS Configuration
dns:
  cache-algorithm: arc
  enable: false # Disable the use of system DNS
  prefer-h3: false # Whether to enable DoH to support HTTP/3 and will try concurrently
  listen: 0.0.0.0:53 # Enable DNS server listening
  # ipv6: false # false will return empty results for AAAA
  # ipv6-timeout: 300 # Unit: ms, when the internal dual stack is concurrent, when querying AAAA upstream, the waiting time for AAAA, the default is 100ms
  # DNS service domain name used to resolve nameserver, fallback and other DNS server configurations
  # Only pure IP addresses can be used, encrypted DNS can be used
  default-nameserver:
    - 114.114.114.114
    - 8.8.8.8
    - tls://1.12.12.12:853
    - tls://223.5.5.5:853
    - system # append DNS server from system configuration. If not found, it would print an error log and skip.
  enhanced-mode: fake-ip # or redir-host

  fake-ip-range: 198.18.0.1/16 # fake-ip pool settings

  # Configure domain names that do not use fake-ip
  fake-ip-filter:
    - '*.and'
    - localhost.ptlogin2.qq.com
    # fakeip-filter subscribes to the rule named fakeip-filter in rule-providers.
    # And behavior must be domain/classical. When it is classical, only domain name rules will take effect.
    - rule-set:fakeip-filter
    # fakeip-filter is the category named fakeip-filter in geosite (you need to ensure that this category exists)
    - geosite:fakeip-filter
  # Configure the matching mode of fake-ip-filter. The default is blacklist, which means that if the match is successful, fake-ip will not be returned.
  # Can be set to whitelist, that is, fake-ip is returned only if the match is successful
  fake-ip-filter-mode: blacklist

  # use-hosts: true # Query hosts

  # Configure whether the following nameserver, fallback and nameserver-policy connection process to the dns server complies with the rules
  # If false (default value), the DNS servers in these three parts will be directly connected if not specifically specified
  # If true, the connection method (proxy or direct connection) will be matched according to the rules. If there is a special value, it will still be based on the specified value.
  # This option can only be enabled when proxy-server-nameserver is not empty. It is strongly not recommended to use it with prefer-h3
  # In addition, if a domain name appears in the DNS server of these three configurations, the default-nameserver configuration item will be used for resolution. Please also make sure that the default-nameserver is configured correctly.
  respect-rules: false

  # DNS primary domain name configuration
  # Support UDP, TCP, DoT, DoH, DoQ
  # This part is the main DNS configuration, which affects all direct connections and ensures that the DNS with accurate resolution for the mainland is used
  nameserver:
    - 114.114.114.114 # default value
    - 8.8.8.8 # default value
    - tls://223.5.5.5:853 # DNS over TLS
    - https://doh.pub/dns-query # DNS over HTTPS
    - https://dns.alidns.com/dns-query#h3=true # Force HTTP/3, not related to perfer-h3, force HTTP/3 support for DoH, if not supported it will not work
    - https://mozilla.cloudflare-dns.com/dns-query#DNS&h3=true # Specify policy group and use HTTP/3
    - dhcp://en0 # dns from dhcp
    - quic://dns.adguard.com:784 # DNS over QUIC
    # - '8.8.8.8#RULES' # Same effect as respect-rules, but only applies to this server
    # - '8.8.8.8#en0' # Compatible with the specified DNS export network card

  # When configuring fallback, the IP returned by the nameserver will be queried to see if it is a CN. This is not necessary.
  # If it is not CN, use the DNS query result in fallback
  # Ensure that the query can be performed normally when configuring fallback
  # fallback:
  #   - tcp://1.1.1.1
  # - 'tcp://1.1.1.1#ProxyGroupName' #Specify DNS query through proxy, ProxyGroupName is the policy group name or node name, proxy configuration takes precedence over configuration of egress network card, if policy group or node name cannot be found, it is set to egress network card

  # DNS server dedicated to node domain name resolution, non-essential configuration item. If not filled in, the configuration of nameserver-policy, nameserver and fallback will be followed
  # proxy-server-nameserver:
  #   - https://dns.google/dns-query
  #   - tls://one.one.one.one

  # DNS server dedicated to direct export domain name resolution, non-essential configuration item. If not filled in, the configuration of nameserver-policy, nameserver and fallback will be followed
  # direct-nameserver:
  #   - system://
  # direct-nameserver-follow-policy: false # Whether to follow nameserver-policy. The default is not to follow. This function takes effect only when direct-nameserver is not empty.

  # Configure fallback usage conditions
  # fallback-filter:
  # geoip: true # Configure whether to use geoip
  # geoip-code: CN # When the nameserver domain name IP query geoip library is CN, the DNS query result in fallback is not used
  #Configure mandatory fallback, which takes precedence over IP judgment. For specific classification, please check the geosite library.
  #geosite:
  # - see
  # If ipcidr does not match, use the result in nameservers
  # ipcidr:
  #     - 240.0.0.0/4
  #   domain:
  # - '+.google.com'
  # - '+.facebook.com'
  #     - '+.youtube.com'

  # Configure the DNS server used to query the domain name
  nameserver-policy:
    #   'www.baidu.com': '114.114.114.114'
    #   '+.internal.crop.com': '10.0.0.1'
    "geosite:cn,private,apple":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
    "geosite:category-ads-all": rcode://success
    "www.baidu.com,+.google.cn": [223.5.5.5, https://dns.alidns.com/dns-query]
    ## global, dns subscribe to the rules named global and dns in rule-providers.
    ## And behavior must be domain/classical. When it is classical, only domain name rules will take effect.
    # "rule-set:global,dns": 8.8.8.8

proxies: # socks5
  - name: "socks"
    type: socks5
    server: server
    port: 443
    # username: username
    # password: password
    # tls: true
    # fingerprint: xxxx
    # skip-cert-verify: true
    # udp: true
    # ip-version: ipv6

  # http
  - name: "http"
    type: http
    server: server
    port: 443
    # username: username
    # password: password
    # tls: true # https
    # skip-cert-verify: true
    # sni: custom.com
    # fingerprint: xxxx # Same as experimental.fingerprints. Use sha256 fingerprint. Configure protocol-independent fingerprints. Experimental.fingerprints will be ignored.
    # ip-version: dual

  # Snell
  # Beware that there's currently no UDP support yet
  - name: "snell"
    type: snell
    server: server
    port: 44046
    psk: yourpsk
    # version: 2
    # obfs-opts:
    # mode: http # or tls
    # host: bing.com

  # Shadowsocks
  # cipher support:
  #   aes-128-gcm aes-192-gcm aes-256-gcm
  #   aes-128-cfb aes-192-cfb aes-256-cfb
  #   aes-128-ctr aes-192-ctr aes-256-ctr
  #   rc4-md5 chacha20-ietf xchacha20
  #   chacha20-ietf-poly1305 xchacha20-ietf-poly1305
  #   2022-blake3-aes-128-gcm 2022-blake3-aes-256-gcm 2022-blake3-chacha20-poly1305
  - name: "ss1"
    type: ss
    server: server
    port: 443
    cipher: chacha20-ietf-poly1305
    password: "password"
    # udp: true
    # udp-over-tcp: false
    # ip-version: ipv4 # Set the IP version used by the node, optional: dual, ipv4, ipv6, ipv4-prefer, ipv6-prefer. Dual is used by default
    # ipv4: Use IPv4 only ipv6: Use IPv6 only
    # ipv4-prefer: Use IPv4 first. For TCP, dual stack analysis will be performed, and concurrent connections will be made, but IPv4 connections will be used first.
    # UDP is a dual stack analysis, get the first IPv4 in the result
    # ipv6-prefer 同 ipv4-prefer
    # All existing protocols support this parameter. The TCP effect only takes effect when tcp-concurrent is enabled.
    smux:
      enabled: false
      protocol: smux # smux/yamux/h2mux
      # max-connections: 4 # Maximum connections. Conflict with max-streams.
      # min-streams: 4 # Minimum multiplexed streams in a connection before opening a new connection. Conflict with max-streams.
      # max-streams: 0 # Maximum multiplexed streams in a connection before opening a new connection. Conflict with max-connections and min-streams.
      # padding: false # Enable padding. Requires sing-box server version 1.3-beta9 or later.
      # statistic: false # Controls whether the underlying connection is displayed in the panel to facilitate interrupting the underlying connection
      # only-tcp: false # If set to true, smux settings will not take effect on udp, and udp connections will go directly to the underlying protocol

  - name: "ss2"
    type: ss
    server: server
    port: 443
    cipher: chacha20-ietf-poly1305
    password: "password"
    plugin: obfs
    plugin-opts:
      mode: tls # or http
      # host: bing.com

  - name: "ss3"
    type: ss
    server: server
    port: 443
    cipher: chacha20-ietf-poly1305
    password: "password"
    plugin: v2ray-plugin
    plugin-opts:
      mode: websocket # no QUIC now
      # tls: true # wss
      # You can use openssl x509 -noout -fingerprint -sha256 -inform pem -in yourcert.pem to obtain
      # Configuring fingerprint will achieve SSL Pining effect
      # fingerprint: xxxx
      # skip-cert-verify: true
      # host: bing.com
      # path: "/"
      # mux: true
      # headers:
      #   custom: value
      # v2ray-http-upgrade: false
      # v2ray-http-upgrade-fast-open: false

  - name: "ss4-shadow-tls"
    type: ss
    server: server
    port: 443
    cipher: chacha20-ietf-poly1305
    password: "password"
    plugin: shadow-tls
    client-fingerprint: chrome
    plugin-opts:
      host: "cloud.tencent.com"
      password: "shadow_tls_password"
      version: 2 # support 1/2/3

  - name: "ss-restls-tls13"
    type: ss
    server: [YOUR_SERVER_IP]
    port: 443
    cipher: chacha20-ietf-poly1305
    password: [YOUR_SS_PASSWORD]
    client-fingerprint:
      chrome # One of: chrome, ios, firefox or safari
      # Can be one of chrome, ios, firefox, safari
    plugin: restls
    plugin-opts:
      host:
        "www.microsoft.com" # Must be a TLS 1.3 server
        # Should be a TLS 1.3 server
      password: [YOUR_RESTLS_PASSWORD]
      version-hint: "tls13"
      # Control your post-handshake traffic through restls-script
      # Hide proxy behaviors like "tls in tls".
      # see https://github.com/3andne/restls/blob/main/Restls-Script:%20Hide%20Your%20Proxy%20Traffic%20Behavior.md
      # Use the restls script to control the behavior after the handshake, hiding features such as "tls in tls"
      # Details: https://github.com/3andne/restls/blob/main/Restls-Script:%20%E9%9A%90%E8%97%8F%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%90%86%E8%A1%8C%E4%B8%BA.md
      restls-script: "300?100<1,400~100,350~100,600~100,300~200,300~100"

  - name: "ss-restls-tls12"
    type: ss
    server: [YOUR_SERVER_IP]
    port: 443
    cipher: chacha20-ietf-poly1305
    password: [YOUR_SS_PASSWORD]
    client-fingerprint:
      chrome # One of: chrome, ios, firefox or safari
      # Can be one of chrome, ios, firefox, safari
    plugin: restls
    plugin-opts:
      host:
        "vscode.dev" # Must be a TLS 1.2 server
        # Should be a TLS 1.2 server
      password: [YOUR_RESTLS_PASSWORD]
      version-hint: "tls12"
      restls-script: "1000?100<1,500~100,350~100,600~100,400~200"

  # vmess
  # cipher supports auto/aes-128-gcm/chacha20-poly1305/none
  - name: "vmess"
    type: vmess
    server: server
    port: 443
    uuid: uuid
    alterId: 32
    cipher: auto
    # udp: true
    # tls: true
    # fingerprint: xxxx
    # client-fingerprint: chrome    # Available: "chrome","firefox","safari","ios","random", currently only support TLS transport in TCP/GRPC/WS/HTTP for VLESS/Vmess and trojan.
    # skip-cert-verify: true
    # servername: example.com # priority over wss host
    # network: ws
    # ws-opts:
      # path: /path
      # headers:
      #   Host: v2ray.com
      # max-early-data: 2048
      # early-data-header-name: Sec-WebSocket-Protocol
      # v2ray-http-upgrade: false
      # v2ray-http-upgrade-fast-open: false

  - name: "vmess-h2"
    type: vmess
    server: server
    port: 443
    uuid: uuid
    alterId: 32
    cipher: auto
    network: h2
    tls: true
    # fingerprint: xxxx
    h2-opts:
      host:
        - http.example.com
        - http-alt.example.com
      path: /

  - name: "vmess-http"
    type: vmess
    server: server
    port: 443
    uuid: uuid
    alterId: 32
    cipher: auto
    # udp: true
    # network: http
    # http-opts:
    #   method: "GET"
    #   path:
    #     - '/'
    #     - '/video'
    #   headers:
    #     Connection:
    #       - keep-alive
    # ip-version: ipv4 # Set the IP type preference, optional: ipv4, ipv6, dual, default value: dual

  - name: vmess-grpc
    server: server
    port: 443
    type: vmess
    uuid: uuid
    alterId: 32
    cipher: auto
    network: grpc
    tls: true
    # fingerprint: xxxx
    servername: example.com
    # skip-cert-verify: true
    grpc-opts:
      grpc-service-name: "example"
    # ip-version: ipv4

  # vless
  - name: "vless-tcp"
    type: vless
    server: server
    port: 443
    uuid: uuid
    network: tcp
    servername: example.com # AKA SNI
    # flow: xtls-rprx-direct # xtls-rprx-origin  # enable XTLS
    # skip-cert-verify: true
    # fingerprint: xxxx
    # client-fingerprint: random # Available: "chrome","firefox","safari","random","none"

  - name: "vless-vision"
    type: vless
    server: server
    port: 443
    uuid: uuid
    network: tcp
    tls: true
    udp: true
    flow: xtls-rprx-vision
    client-fingerprint: chrome
    # fingerprint: xxxx
    # skip-cert-verify: true

  - name: "vless-reality-vision"
    type: vless
    server: server
    port: 443
    uuid: uuid
    network: tcp
    tls: true
    udp: true
    flow: xtls-rprx-vision
    servername: www.microsoft.com # REALITY servername
    reality-opts:
      public-key: xxx
      short-id: xxx # optional
    client-fingerprint: chrome # cannot be empty

  - name: "vless-reality-grpc"
    type: vless
    server: server
    port: 443
    uuid: uuid
    network: grpc
    tls: true
    udp: true
    flow:
    # skip-cert-verify: true
    client-fingerprint: chrome
    servername: testingcf.jsdelivr.net
    grpc-opts:
      grpc-service-name: "grpc"
    reality-opts:
      public-key: CrrQSjAG_YkHLwvM2M-7XkKJilgL5upBKCp0od0tLhE
      short-id: 10f897e26c4b9478

  - name: "vless-ws"
    type: vless
    server: server
    port: 443
    uuid: uuid
    udp: true
    tls: true
    network: ws
    # client-fingerprint: random # Available: "chrome","firefox","safari","random","none"
    servername: example.com # priority over wss host
    # skip-cert-verify: true
    # fingerprint: xxxx
    ws-opts:
      path: "/"
      headers:
        Host: example.com
      # v2ray-http-upgrade: false
      # v2ray-http-upgrade-fast-open: false

  # Trojan
  - name: "trojan"
    type: trojan
    server: server
    port: 443
    password: yourpsk
    # client-fingerprint: random # Available: "chrome","firefox","safari","random","none"
    # fingerprint: xxxx
    # udp: true
    # sni: example.com # aka server name
    #alpn:
    #   - h2
    #   - http/1.1
    # skip-cert-verify: true
    # ss-opts: # like trojan-go's `shadowsocks` config
    #   enabled: false
    #   method: aes-128-gcm # aes-128-gcm/aes-256-gcm/chacha20-ietf-poly1305
    #   password: "example"

  - name: trojan-grpc
    server: server
    port: 443
    type: trojan
    password: "example"
    network: grpc
    sni: example.com
    # skip-cert-verify: true
    # fingerprint: xxxx
    udp: true
    grpc-opts:
      grpc-service-name: "example"

  - name: trojan-ws
    server: server
    port: 443
    type: trojan
    password: "example"
    network: ws
    sni: example.com
    # skip-cert-verify: true
    # fingerprint: xxxx
    udp: true
    # ws-opts:
    #   path: /path
    #   headers:
    #     Host: example.com
    #   v2ray-http-upgrade: false
    #   v2ray-http-upgrade-fast-open: false

  - name: "trojan-xtls"
    type: trojan
    server: server
    port: 443
    password: yourpsk
    flow: "xtls-rprx-direct" # xtls-rprx-origin xtls-rprx-direct
    flow-show: true
    # udp: true
    # sni: example.com # aka server name
    # skip-cert-verify: true
    # fingerprint: xxxx

  #hysteria
  - name: "hysteria"
    type: hysteria
    server: server.com
    port: 443
    # ports: 1000,2000-3000,5000 # port cannot be omitted
    auth-str: yourpassword
    # obfs: obfs_str
    #alpn:
    # - h3
    protocol: udp # Support udp/wechat-video/faketcp
    up: "30 Mbps" # If the unit is not specified, the default is Mbps
    down: "200 Mbps" # If the unit is not specified, the default is Mbps
    # sni: server.com
    # skip-cert-verify: false
    # recv-window-conn: 12582912
    # recv-window: 52428800
    # ca: "./my.ca"
    # ca-str: "xyz"
    # disable-mtu-discovery: false
    # fingerprint: xxxx
    # fast-open: true #Support TCP fast open, default is false

  #hysteria2
  - name: "hysteria2"
    type: hysteria2
    server: server.com
    port: 443
    # ports: 1000,2000-3000,5000 # port cannot be omitted
    # hop-interval: 15
    # If both up and down are not written or are 0, BBR flow control is used
    # up: "30 Mbps" # If the unit is not specified, the default is Mbps
    # down: "200 Mbps" # If the unit is not specified, the default is Mbps
    password: yourpassword
    # obfs: salamander # The default value is empty. If filled in, obfs will be enabled. Currently only salamander is supported.
    # obfs-password: yourpassword
    # sni: server.com
    # skip-cert-verify: false
    # fingerprint: xxxx
    #alpn:
    # - h3
    # ca: "./my.ca"
    # ca-str: "xyz"

  # wireguard
  - name: "wg"
    type: wireguard
    server: 162.159.192.1
    port: 2480
    ip: 172.16.0.2
    ipv6: fd01:5ca1:ab1e:80fa:ab85:6eea:213f:f4a5
    public-key: Cr8hWlKvtDt7nrvf+f0brNQQzabAqrjfBvas9pmowjo=
    #    pre-shared-key: 31aIhAPwktDGpH4JDhA8GNvjFXEf/a6+UaQRyOAiyfM=
    private-key: eCtXsJZ27+4PbhDkHnB923tkUn2Gj59wZw5wFA75MnU=
    udp: true
    reserved: "U4An"
    # Array format is also legal
    # reserved: [209,98,59]
    # An outbound proxy identifier. When the value is not empty, the specified proxy will be used to make the connection
    # dialer-proxy: "ss1"
    # remote-dns-resolve: true # Force dns remote resolution, the default value is false
    # dns: [ 1.1.1.1, 8.8.8.8 ] # Only works when remote-dns-resolve is true
    # refresh-server-ip-interval: 60 # The interval for re-resolving server IP, in seconds. The default value is 0, which means that the server domain name is only resolved when the first connection is made. This option should only be enabled when the IP corresponding to the server domain name changes (such as home broadband ddns)
    # If peers is not empty, allowed-ips in this section cannot be empty; server, port, public-key, pre-shared-key in the previous section will be ignored, but private-key will be retained and can only be specified at the top level
    # peers:
    #   - server: 162.159.192.1
    #     port: 2480
    #     public-key: Cr8hWlKvtDt7nrvf+f0brNQQzabAqrjfBvas9pmowjo=
    #     # pre-shared-key: 31aIhAPwktDGpH4JDhA8GNvjFXEf/a6+UaQRyOAiyfM=
    #     allowed-ips: ['0.0.0.0/0']
    #     reserved: [209,98,59]
    # If it exists, enable the AmneziaWG function
    # amnesia-wg-option:
    #   jc: 5
    #jmin:500
    #jmax: 501
    # s1: 30
    # s2: 40
    # h1: 123456
    #   h2: 67543
    # h4: 32345
    # h3: 123123

  # understand
  - name: tuic
    server: www.example.com
    port: 10443
    type: tuic
    # tuicV4 token must be filled in (uuid and password cannot be filled in at the same time)
    token: TOKEN
    # tuicV5 requires uuid and password (token cannot be filled in at the same time)
    uuid: 00000000-0000-0000-0000-000000000001
    password: PASSWORD_1
    # ip: 127.0.0.1 # for overwriting the DNS lookup result of the server address set in option 'server'
    # heartbeat-interval: 10000
    #alpn: [h3]
    disable-sni: true
    reduce-rtt: true
    request-timeout: 8000
    udp-relay-mode: native # Available: "native", "quic". Default: "native"
    # congestion-controller: bbr # Available: "cubic", "new_reno", "bbr". Default: "cubic"
    # cwnd: 10 # default: 32
    # max-udp-relay-packet-size: 1500
    # fast-open: true
    # skip-cert-verify: true
    # max-open-streams: 20 # default 100, too many open streams may hurt performance
    # sni: example.com
    #
    # meta and sing-box private extension, use ss-uot for udp relay, udp-relay-mode will be invalid after turning on this option
    # Warning, incompatible with original tuic!!!
    # udp-over-stream: false
    # udp-over-stream-version: 1

  # ShadowsocksR
  # The supported ciphers (encryption methods): all stream ciphers in ss
  # The supported obfses:
  #   plain http_simple http_post
  #   random_head tls1.2_ticket_auth tls1.2_ticket_fastauth
  # The supported protocols:
  #   origin auth_sha1_v4 auth_aes128_md5
  #   auth_aes128_sha1 auth_chain_a auth_chain_b
  - name: "ssr"
    type: ssr
    server: server
    port: 443
    cipher: chacha20-ietf
    password: "password"
    obfs: tls1.2_ticket_auth
    protocol: auth_sha1_v4
    # obfs-param: domain.tld
    # protocol-param: "#"
    # udp: true

  - name: "ssh-out"
    type: ssh

    server: 127.0.0.1
    port: 22
    username: root
    password: password
    privateKey: path

# DNS outbound will hijack the request to the internal DNS module, and all requests will be processed internally
  - name: "dns-out"
    type: dns
proxy-groups:
  # Proxy chain, currently the relay that can support udp is only vmess/vless/trojan/ss/ssr/tuic
  # Wireguard is not currently supported in relay, please use the dialer-proxy configuration item in proxy
  # Traffic: mihomo <-> http <-> vmess <-> ss1 <-> ss2 <-> Internet
  - name: "relay"
    type: relay
    proxies:
      - http
      - vmess
      - ss1
      - ss2

  # url-test will use the node with the lowest latency according to the url test result
  - name: "auto"
    type: url-test
    proxies:
      - ss1
      - ss2
      - vmess1
    # tolerance: 150
    # lazy: true
    # expected-status: 204 # When the health check returns a status code that does not match the expected value, the node is considered unavailable
    url: "https://cp.cloudflare.com/generate_204"
    interval: 300

  # Fallback will be selected according to the node order based on the url test results
  - name: "fallback-auto"
    type: fallback
    proxies:
      - ss1
      - ss2
      - vmess1
    url: "https://cp.cloudflare.com/generate_204"
    interval: 300

  # load-balance will randomly select nodes according to the algorithm
  - name: "load-balance"
    type: load-balance
    proxies:
      - ss1
      - ss2
      - vmess1
    url: "https://cp.cloudflare.com/generate_204"
    interval: 300
  # strategy: consistent-hashing # optional round-robin and sticky-sessions

  # select Users can select nodes by themselves
  - name: Proxy
    type: select
    # disable-udp: true
    proxies:
      - ss1
      - ss2
      - vmess1
      - auto

  # Configure the DIRECT of the specified interface-name and fwmark
  - name: en1
    type: select
    interface-name: en1
    routing-mark: 6667
    proxies:
      - DIRECT

  - name: UseProvider
    type: select
    filter: "HK|TW" # Regular expression, filter provider1 node names containing HK or TW
    use:
      - provider1
    proxies:
      - Proxy
      - DIRECT

# Mihomo format nodes or *ray supported sharing formats
proxy-providers:
  provider1:
    type: http # The http path can be left blank. The default storage path is the proxies folder in homedir. The file name is the md5 of the url.
    url: "url"
    interval: 3600
    path: ./provider1.yaml # By default, only storage in mihomo's Home Dir is allowed. If you want to store it anywhere, add the environment variable SKIP_SAFE_PATH_CHECK=1
    proxy: DIRECT
    header:
      User-Agent:
      - "Clash/v1.18.0"
      - "mihomo/1.18.3"
      # Accept:
      # - 'application/vnd.github.v3.raw'
      # Authorization:
      # - 'token 1231231'
    health-check:
      enable: true
      interval: 600
      # lazy: true
      url: https://cp.cloudflare.com/generate_204
      # expected-status: 204 # When the health check returns a status code that does not match the expected value, the node is considered unavailable
    override: # Override some configuration items when loading a node
      skip-cert-verify: true
      udp: true
      # down: "50 Mbps"
      # up: "10 Mbps"
      # dialer-proxy: proxy
      # interface-name: tailscale0
      # routing-mark: 233
      # ip-version: ipv4-prefer
      # additional-prefix: "[provider1]"
      # additional-suffix: "test"
      # # Name replacement, support regular expressions
      # proxy-name:
      #   - pattern: "test"
      #     target: "TEST"
      # - pattern: "IPLC-(.*?)倍"
      # target: "iplc x $1"

  test:
    type: file
    path: /test.yaml
    health-check:
      enable: true
      interval: 36000
      url: https://cp.cloudflare.com/generate_204
rule-providers:
  rule1:
    behavior: classical # domain ipcidr
    interval: 259200
    path: /path/to/save/file.yaml # By default, only storage is allowed in mihomo's Home Dir. If you want to store it anywhere, add the environment variable SKIP_SAFE_PATH_CHECK=1
    type: http # The path of http can be left blank. The default storage path is the rules folder in homedir. The file name is the md5 of the url.
    url: "url"
    proxy: DIRECT
  rule2:
    behavior: classical
    interval: 259200
    path: /path/to/save/file.yaml
    type: file
  rule3:
    # mrs type ruleset currently only supports domain and ipcidr (i.e. does not support classical).
    #
    # For behavior=domain:
    # - format=yaml can be converted to mrs format through "mihomo convert-ruleset domain yaml XXX.yaml XXX.mrs"
    # - format=text can be converted to mrs format through "mihomo convert-ruleset domain text XXX.text XXX.mrs"
    # - XXX.mrs can be converted back to text format via "mihomo convert-ruleset domain mrs XXX.mrs XXX.text" (conversion back to yaml format is not supported yet)
    #
    # For behavior=ipcidr:
    # - format=yaml You can convert to mrs format via "mihomo convert-ruleset ipcidr yaml XXX.yaml XXX.mrs"
    # - format=text You can convert to mrs format via "mihomo convert-ruleset ipcidr text XXX.text XXX.mrs"
    # - XXX.mrs can be converted back to text format via "mihomo convert-ruleset ipcidr mrs XXX.mrs XXX.text" (conversion back to yaml format is not supported yet)
    #
    type: http
    url: "url"
    format: mrs
    behavior: domain
    path: /path/to/save/file.mrs
rules:
  - RULE-SET,rule1,REJECT
  - IP-ASN,1,PROXY
  - DOMAIN-REGEX,^abc,DIRECT
  - DOMAIN-SUFFIX,baidu.com,DIRECT
  - DOMAIN-KEYWORD,google,ss1
  - IP-CIDR,1.1.1.1/32,ss1
  - IP-CIDR6,2409::/64,DIRECT
  # When the condition is TCP or UDP traffic, use the rule set named sub-rule-name1
  - SUB-RULE,(OR,((NETWORK,TCP),(NETWORK,UDP))),sub-rule-name1
  - SUB-RULE,(AND,((NETWORK,UDP))),sub-rule-name2
# Define multiple sub-rule sets, the rules will be matched in a forked manner, use SUB-RULE
#                                               google.com(not match)--> baidu.com(match)
#                                                /                                ｜
#                                               /                                 ｜
#  https://baidu.com  --> rule1 --> rule2 --> sub-rule-name1(match tcp)          使用 DIRECT
#
#
#                                              google.com(not match)--> baidu.com(not match)
#                                                /                            ｜
#                                               /                             ｜
#  dns 1.1.1.1  --> rule1 --> rule2 --> sub-rule-name1(match udp)         sub-rule-name2(match udp)
#                                                                             ｜
#                                                                             ｜
# Use REJECT <-- 1.1.1.1/32(match)
#

sub-rules:
  sub-rule-name1:
    - DOMAIN,google.com,ss1
    - DOMAIN,baidu.com,DIRECT
  sub-rule-name2:
    - IP-CIDR,1.1.1.1/32,REJECT
    - IP-CIDR,8.8.8.8/32,ss1
    - DOMAIN,dns.alidns.com,REJECT

# Traffic Inbound
listeners:
  - name: socks5-in-1
    type: socks
    port: 10808
    #listen: 0.0.0.0 # Default listener 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy
    # udp: false # default true
    # users: # If you do not fill in the users item, the global authentication settings will be followed. If you fill it in, the global settings will be ignored. If you want to skip the inbound verification, fill in users: []
    #   - username: aaa
    #     password: aaa

  - name: http-in-1
    type: http
    port: 10809
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    # users: # If you do not fill in the users item, the global authentication settings will be followed. If you fill it in, the global settings will be ignored. If you want to skip the inbound verification, fill in users: []
    #   - username: aaa
    #     password: aaa

  - name: mixed-in-1
    type: mixed # HTTP(S) and SOCKS proxy mixed
    port: 10810
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    # udp: false # default true
    # users: # If you do not fill in the users item, the global authentication settings will be followed. If you fill it in, the global settings will be ignored. If you want to skip the inbound verification, fill in users: []
    #   - username: aaa
    #     password: aaa

  - name: reidr-in-1
    type: redir
    port: 10811
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)

  - name: tproxy-in-1
    type: tproxy
    port: 10812
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    # udp: false # default true

  - name: shadowsocks-in-1
    type: shadowsocks
    port: 10813
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    password: vlmpIPSyHH6f4S8WVPdRIHIlzmB+GIRfoH3aNJ/t9Gg=
    cipher: 2022-blake3-aes-256-gcm

  - name: vmess-in-1
    type: vmess
    port: 10814
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    users:
      - username: 1
        uuid: 9d0cb9d0-964f-4ef6-897d-6c6b3ccf9e68
        alterId: 1
    # ws-path: "/" # If not empty, open the websocket transport layer
    # If the following two items are filled in, TLS will be enabled (need to be filled in at the same time)
    # certificate: ./server.crt
    # private-key: ./server.key

  - name: tuic-in-1
    type: tuic
    port: 10815
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    # token: # tuicV4 fill in (can fill in users at the same time)
    #   - TOKEN
    # users: # Fill in tuicV5 (token can be filled in at the same time)
    #   00000000-0000-0000-0000-000000000000: PASSWORD_0
    #   00000000-0000-0000-0000-000000000001: PASSWORD_1
    #  certificate: ./server.crt
    #  private-key: ./server.key
    #  congestion-controller: bbr
    #  max-idle-time: 15000
    #  authentication-timeout: 1000
    #alpn:
    # - h3
    #  max-udp-relay-packet-size: 1500

  - name: tunnel-in-1
    type: tunnel
    port: 10816
    listen: 0.0.0.0
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    network: [tcp, udp]
    target: target.com

  - name: tun-in-1
    type: tun
    # rule: sub-rule-name1 # By default, rules are used. If sub-rule is not found, rules are used directly.
    # proxy: proxy # If it is not empty, the inbound traffic will be directly handled by the specified proxy (when proxy is not empty, the proxy name here must be legal, otherwise an error will occur)
    stack: system # gvisor / mixed
    dns-hijack:
    - 0.0.0.0:53 # DNS to be hijacked
    # auto-detect-interface: false # Automatically identify the egress network card
    # auto-route: false # Configure routing table
    # mtu: 9000 # Maximum transmission unit
    inet4-address: # The ipv4 address segment must be set manually
    - 198.19.0.1/30
    inet6-address: # The ipv6 address segment must be manually set
    - "fdfe:dcba:9877::1/126"
    # strict-route: true #Route all connections to tun to prevent leaks, but your device will not be accessible from other devices
    # inet4-route-address: # Use custom routes instead of default routes when auto-route is enabled
    # - 0.0.0.0/1
    # - 128.0.0.0/1
    # inet6-route-address: # Use custom routes instead of default routes when auto-route is enabled
    # - "::/1"
    # - "8000::/1"
    # endpoint-independent-nat: false # Enable endpoint-independent NAT
    # include-uid: # UID rules are only supported on Linux and require auto-route
    # - 0
    # include-uid-range: # Limit the range of users being routed
    # - 1000:99999
    # exclude-uid: # exclude users from routing
    # - 1000
    # exclude-uid-range: # Exclude the user range of the route
    # - 1000:99999

    # Android user and application rules are only supported on Android
    # and auto-route is required

    # include-android-user: # Limit the Android users that are routed
    # - 0
    # - 10
    # include-package: # Limit the Android application package names that are routed
    # - com.android.chrome
    # exclude-package: # Exclude the Android application package name to be routed
    # - com.android.captiveportallogin
# The inlet configuration is equivalent to Listener. The incoming traffic will be matched and processed in the same way as socks, mixed and other inlets according to the mode specified.
# shadowsocks,vmess ingress configuration (incoming traffic will be matched and processed in the same way as socks,mixed,etc. ingresses according to the mode specified)
# ss-config: ss://2022-blake3-aes-256-gcm:vlmpIPSyHH6f4S8WVPdRIHIlzmB+GIRfoH3aNJ/t9Gg=@:23456
# vmess-config: vmess://1:9d0cb9d0-964f-4ef6-897d-6c6b3ccf9e68@:12345

# tuic server entry (incoming traffic will be matched and processed in the same way as socks, mixed, etc. entries according to the mode specified)
# tuic-server:
#  enable: true
#  listen: 127.0.0.1:10443
# token: # tuicV4 fill in (can fill in users at the same time)
#    - TOKEN
# users: # Fill in tuicV5 (token can be filled in at the same time)
#    00000000-0000-0000-0000-000000000000: PASSWORD_0
#    00000000-0000-0000-0000-000000000001: PASSWORD_1
#  certificate: ./server.crt
#  private-key: ./server.key
#  congestion-controller: bbr
#  max-idle-time: 15000
#  authentication-timeout: 1000
#alpn:
# - h3
#  max-udp-relay-packet-size: 1500
